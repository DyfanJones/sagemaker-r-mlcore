% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/serializers.R
\name{IdentitySerializer}
\alias{IdentitySerializer}
\title{Serialize data by returning data without modification.}
\description{
This serializer may be useful if, for example, you're sending raw bytes such as from an image
             file's method.
}
\seealso{
Other serializer: 
\code{\link{BaseDeserializer}},
\code{\link{BaseSerializer}},
\code{\link{BytesDeserializer}},
\code{\link{CSVDeserializer}},
\code{\link{CSVSerializer}},
\code{\link{DataTableDeserializer}},
\code{\link{JSONDeserializer}},
\code{\link{JSONLinesDeserializer}},
\code{\link{JSONLinesSerializer}},
\code{\link{JSONSerializer}},
\code{\link{LibSVMSerializer}},
\code{\link{NumpyDeserializer}},
\code{\link{NumpySerializer}},
\code{\link{SimpleBaseDeserializer}},
\code{\link{SimpleBaseSerializer}},
\code{\link{SparseMatrixSerializer}},
\code{\link{StringDeserializer}},
\code{\link{TibbleDeserializer}}
}
\concept{serializer}
\section{Super classes}{
\code{\link[sagemaker.mlcore:BaseSerializer]{sagemaker.mlcore::BaseSerializer}} -> \code{\link[sagemaker.mlcore:SimpleBaseSerializer]{sagemaker.mlcore::SimpleBaseSerializer}} -> \code{IdentitySerializer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{IdentitySerializer$new()}}
\item \href{#method-serialize}{\code{IdentitySerializer$serialize()}}
\item \href{#method-clone}{\code{IdentitySerializer$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="BaseSerializer" data-id="format">}\href{../../sagemaker.mlcore/html/BaseSerializer.html#method-format}{\code{sagemaker.mlcore::BaseSerializer$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize an ``IdentitySerializer`` instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdentitySerializer$new(content_type = "application/octet-stream")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{content_type}}{(str): The MIME type to signal to the inference endpoint when sending
request data (default: "application/octet-stream").}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-serialize"></a>}}
\if{latex}{\out{\hypertarget{method-serialize}{}}}
\subsection{Method \code{serialize()}}{
Return data without modification.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdentitySerializer$serialize(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(object): Data to be serialized.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
object: The unmodified data.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IdentitySerializer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
