% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amazon_pca.R
\name{PCA}
\alias{PCA}
\title{An unsupervised machine learning algorithm to reduce feature dimensionality.}
\description{
As a result, number of features within a dataset is reduced but the dataset still
             retain as much information as possible.
}
\section{Super classes}{
\code{\link[sagemaker.common:EstimatorBase]{sagemaker.common::EstimatorBase}} -> \code{\link[sagemaker.mlcore:AmazonAlgorithmEstimatorBase]{sagemaker.mlcore::AmazonAlgorithmEstimatorBase}} -> \code{PCA}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{repo_name}}{sagemaker repo name for framework}

\item{\code{repo_version}}{version of framework}

\item{\code{DEFAULT_MINI_BATCH_SIZE}}{The size of each mini-batch to use when training.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{num_components}}{The number of principal components. Must be greater than zero.}

\item{\code{algorithm_mode}}{Mode for computing the principal components.}

\item{\code{subtract_mean}}{Whether the data should be unbiased both during train and at inference.}

\item{\code{extra_components}}{As the value grows larger, the solution becomes more accurate
but the runtime and memory consumption increase linearly.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{PCA$new()}}
\item \href{#method-create_model}{\code{PCA$create_model()}}
\item \href{#method-.prepare_for_training}{\code{PCA$.prepare_for_training()}}
\item \href{#method-clone}{\code{PCA$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="attach">}\href{../../sagemaker.common/html/EstimatorBase.html#method-attach}{\code{sagemaker.common::EstimatorBase$attach()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="compile_model">}\href{../../sagemaker.common/html/EstimatorBase.html#method-compile_model}{\code{sagemaker.common::EstimatorBase$compile_model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="delete_endpoint">}\href{../../sagemaker.common/html/EstimatorBase.html#method-delete_endpoint}{\code{sagemaker.common::EstimatorBase$delete_endpoint()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="deploy">}\href{../../sagemaker.common/html/EstimatorBase.html#method-deploy}{\code{sagemaker.common::EstimatorBase$deploy()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="describe">}\href{../../sagemaker.common/html/EstimatorBase.html#method-describe}{\code{sagemaker.common::EstimatorBase$describe()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="disable_profiling">}\href{../../sagemaker.common/html/EstimatorBase.html#method-disable_profiling}{\code{sagemaker.common::EstimatorBase$disable_profiling()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="enable_default_profiling">}\href{../../sagemaker.common/html/EstimatorBase.html#method-enable_default_profiling}{\code{sagemaker.common::EstimatorBase$enable_default_profiling()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="enable_network_isolation">}\href{../../sagemaker.common/html/EstimatorBase.html#method-enable_network_isolation}{\code{sagemaker.common::EstimatorBase$enable_network_isolation()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="format">}\href{../../sagemaker.common/html/EstimatorBase.html#method-format}{\code{sagemaker.common::EstimatorBase$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="get_vpc_config">}\href{../../sagemaker.common/html/EstimatorBase.html#method-get_vpc_config}{\code{sagemaker.common::EstimatorBase$get_vpc_config()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="help">}\href{../../sagemaker.common/html/EstimatorBase.html#method-help}{\code{sagemaker.common::EstimatorBase$help()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_debugger_artifacts_path">}\href{../../sagemaker.common/html/EstimatorBase.html#method-latest_job_debugger_artifacts_path}{\code{sagemaker.common::EstimatorBase$latest_job_debugger_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_profiler_artifacts_path">}\href{../../sagemaker.common/html/EstimatorBase.html#method-latest_job_profiler_artifacts_path}{\code{sagemaker.common::EstimatorBase$latest_job_profiler_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_tensorboard_artifacts_path">}\href{../../sagemaker.common/html/EstimatorBase.html#method-latest_job_tensorboard_artifacts_path}{\code{sagemaker.common::EstimatorBase$latest_job_tensorboard_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="logs">}\href{../../sagemaker.common/html/EstimatorBase.html#method-logs}{\code{sagemaker.common::EstimatorBase$logs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="register">}\href{../../sagemaker.common/html/EstimatorBase.html#method-register}{\code{sagemaker.common::EstimatorBase$register()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="rule_job_summary">}\href{../../sagemaker.common/html/EstimatorBase.html#method-rule_job_summary}{\code{sagemaker.common::EstimatorBase$rule_job_summary()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="transformer">}\href{../../sagemaker.common/html/EstimatorBase.html#method-transformer}{\code{sagemaker.common::EstimatorBase$transformer()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="update_profiler">}\href{../../sagemaker.common/html/EstimatorBase.html#method-update_profiler}{\code{sagemaker.common::EstimatorBase$update_profiler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="fit">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-fit}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$fit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="hyperparameters">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-hyperparameters}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$hyperparameters()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="prepare_workflow_for_training">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-prepare_workflow_for_training}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$prepare_workflow_for_training()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="record_set">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-record_set}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$record_set()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="training_image_uri">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-training_image_uri}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$training_image_uri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="wait">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-wait}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$wait()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
A Principal Components Analysis (PCA)
             :class:`~sagemaker.amazon.amazon_estimator.AmazonAlgorithmEstimatorBase`.
             This Estimator may be fit via calls to
             :meth:`~sagemaker.amazon.amazon_estimator.AmazonAlgorithmEstimatorBase.fit_ndarray`
             or
             :meth:`~sagemaker.amazon.amazon_estimator.AmazonAlgorithmEstimatorBase.fit`.
             The former allows a PCA model to be fit on a 2-dimensional numpy array.
             The latter requires Amazon :class:`~sagemaker.amazon.record_pb2.Record`
             protobuf serialized data to be stored in S3.
             To learn more about the Amazon protobuf Record class and how to
             prepare bulk data in this format, please consult AWS technical
             documentation:
             https://docs.aws.amazon.com/sagemaker/latest/dg/cdf-training.html
             After this Estimator is fit, model data is stored in S3. The model
             may be deployed to an Amazon SageMaker Endpoint by invoking
             :meth:`~sagemaker.amazon.estimator.EstimatorBase.deploy`. As well as
             deploying an Endpoint, deploy returns a
             :class:`~sagemaker.amazon.pca.PCAPredictor` object that can be used to
             project input vectors to the learned lower-dimensional representation,
             using the trained PCA model hosted in the SageMaker Endpoint.
             PCA Estimators can be configured by setting hyperparameters. The
             available hyperparameters for PCA are documented below. For further
             information on the AWS PCA algorithm, please consult AWS technical
             documentation: https://docs.aws.amazon.com/sagemaker/latest/dg/pca.html
             This Estimator uses Amazon SageMaker PCA to perform training and host
             deployed models. To learn more about Amazon SageMaker PCA, please read:
             https://docs.aws.amazon.com/sagemaker/latest/dg/how-pca-works.html
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PCA$new(
  role,
  instance_count,
  instance_type,
  num_components,
  algorithm_mode = NULL,
  subtract_mean = NULL,
  extra_components = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{role}}{(str): An AWS IAM role (either name or full ARN). The Amazon
SageMaker training jobs and APIs that create Amazon SageMaker
endpoints use this role to access training data and model
artifacts. After the endpoint is created, the inference code
might use the IAM role, if accessing AWS resource.}

\item{\code{instance_count}}{(int): Number of Amazon EC2 instances to use
for training.}

\item{\code{instance_type}}{(str): Type of EC2 instance to use for training,
for example, 'ml.c4.xlarge'.}

\item{\code{num_components}}{(int): The number of principal components. Must be
greater than zero.}

\item{\code{algorithm_mode}}{(str): Mode for computing the principal components.
One of 'regular' or 'randomized'.}

\item{\code{subtract_mean}}{(bool): Whether the data should be unbiased both
during train and at inference.}

\item{\code{extra_components}}{(int): As the value grows larger, the solution
becomes more accurate but the runtime and memory consumption
increase linearly. If this value is unset or set to -1, then a
default value equal to the maximum of 10 and num_components will
be used. Valid for randomized mode only.}

\item{\code{...}}{: base class keyword argument values.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_model"></a>}}
\if{latex}{\out{\hypertarget{method-create_model}{}}}
\subsection{Method \code{create_model()}}{
Return a :class:`~sagemaker.amazon.pca.PCAModel` referencing the
             latest s3 model data produced by this Estimator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PCA$create_model(vpc_config_override = "VPC_CONFIG_DEFAULT", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{vpc_config_override}}{(dict[str, list[str]]): Optional override for VpcConfig set on
the model. Default: use subnets and security groups from this Estimator.
* 'Subnets' (list[str]): List of subnet ids.
* 'SecurityGroupIds' (list[str]): List of security group ids.}

\item{\code{...}}{: Additional kwargs passed to the PCAModel constructor.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.prepare_for_training"></a>}}
\if{latex}{\out{\hypertarget{method-.prepare_for_training}{}}}
\subsection{Method \code{.prepare_for_training()}}{
Set hyperparameters needed for training.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PCA$.prepare_for_training(records, mini_batch_size = NULL, job_name = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{records}}{(:class:`~RecordSet`): The records to train this ``Estimator`` on.}

\item{\code{mini_batch_size}}{(int or None): The size of each mini-batch to use when
training. If ``None``, a default value will be used.}

\item{\code{job_name}}{(str): Name of the training job to be created. If not
specified, one is generated, using the base name given to the
constructor if applicable.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PCA$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
