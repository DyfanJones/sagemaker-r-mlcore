% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amazon_ipinsights.R
\name{IPInsights}
\alias{IPInsights}
\title{An unsupervised learning algorithm that learns the usage patterns for IPv4 addresses.}
\description{
It is designed to capture associations between IPv4 addresses and various entities, such
             as user IDs or account numbers.
}
\section{Super classes}{
\code{\link[sagemaker.common:EstimatorBase]{sagemaker.common::EstimatorBase}} -> \code{\link[sagemaker.mlcore:AmazonAlgorithmEstimatorBase]{sagemaker.mlcore::AmazonAlgorithmEstimatorBase}} -> \code{IPInsights}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{repo_name}}{sagemaker repo name for framework}

\item{\code{repo_version}}{version of framework}

\item{\code{MINI_BATCH_SIZE}}{The size of each mini-batch to use when training. If None, a default value will be used.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{num_entity_vectors}}{The number of embeddings to train for entities accessing online resources}

\item{\code{vector_dim}}{The size of the embedding vectors for both entity and IP addresses}

\item{\code{batch_metrics_publish_interval}}{The period at which to publish metrics}

\item{\code{epochs}}{Maximum number of passes over the training data.}

\item{\code{learning_rate}}{Learning rate for the optimizer.}

\item{\code{num_ip_encoder_layers}}{The number of fully-connected layers to encode IP address embedding.}

\item{\code{random_negative_sampling_rate}}{The ratio of random negative samples to draw during training.}

\item{\code{shuffled_negative_sampling_rate}}{The ratio of shuffled negative samples to draw during training.}

\item{\code{weight_decay}}{Weight decay coefficient. Adds L2 regularization}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{IPInsights$new()}}
\item \href{#method-create_model}{\code{IPInsights$create_model()}}
\item \href{#method-.prepare_for_training}{\code{IPInsights$.prepare_for_training()}}
\item \href{#method-clone}{\code{IPInsights$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="attach">}\href{../../sagemaker.common/html/EstimatorBase.html#method-attach}{\code{sagemaker.common::EstimatorBase$attach()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="compile_model">}\href{../../sagemaker.common/html/EstimatorBase.html#method-compile_model}{\code{sagemaker.common::EstimatorBase$compile_model()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="delete_endpoint">}\href{../../sagemaker.common/html/EstimatorBase.html#method-delete_endpoint}{\code{sagemaker.common::EstimatorBase$delete_endpoint()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="deploy">}\href{../../sagemaker.common/html/EstimatorBase.html#method-deploy}{\code{sagemaker.common::EstimatorBase$deploy()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="describe">}\href{../../sagemaker.common/html/EstimatorBase.html#method-describe}{\code{sagemaker.common::EstimatorBase$describe()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="disable_profiling">}\href{../../sagemaker.common/html/EstimatorBase.html#method-disable_profiling}{\code{sagemaker.common::EstimatorBase$disable_profiling()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="enable_default_profiling">}\href{../../sagemaker.common/html/EstimatorBase.html#method-enable_default_profiling}{\code{sagemaker.common::EstimatorBase$enable_default_profiling()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="enable_network_isolation">}\href{../../sagemaker.common/html/EstimatorBase.html#method-enable_network_isolation}{\code{sagemaker.common::EstimatorBase$enable_network_isolation()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="format">}\href{../../sagemaker.common/html/EstimatorBase.html#method-format}{\code{sagemaker.common::EstimatorBase$format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="get_vpc_config">}\href{../../sagemaker.common/html/EstimatorBase.html#method-get_vpc_config}{\code{sagemaker.common::EstimatorBase$get_vpc_config()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="help">}\href{../../sagemaker.common/html/EstimatorBase.html#method-help}{\code{sagemaker.common::EstimatorBase$help()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_debugger_artifacts_path">}\href{../../sagemaker.common/html/EstimatorBase.html#method-latest_job_debugger_artifacts_path}{\code{sagemaker.common::EstimatorBase$latest_job_debugger_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_profiler_artifacts_path">}\href{../../sagemaker.common/html/EstimatorBase.html#method-latest_job_profiler_artifacts_path}{\code{sagemaker.common::EstimatorBase$latest_job_profiler_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="latest_job_tensorboard_artifacts_path">}\href{../../sagemaker.common/html/EstimatorBase.html#method-latest_job_tensorboard_artifacts_path}{\code{sagemaker.common::EstimatorBase$latest_job_tensorboard_artifacts_path()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="logs">}\href{../../sagemaker.common/html/EstimatorBase.html#method-logs}{\code{sagemaker.common::EstimatorBase$logs()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="register">}\href{../../sagemaker.common/html/EstimatorBase.html#method-register}{\code{sagemaker.common::EstimatorBase$register()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="rule_job_summary">}\href{../../sagemaker.common/html/EstimatorBase.html#method-rule_job_summary}{\code{sagemaker.common::EstimatorBase$rule_job_summary()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="transformer">}\href{../../sagemaker.common/html/EstimatorBase.html#method-transformer}{\code{sagemaker.common::EstimatorBase$transformer()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.common" data-topic="EstimatorBase" data-id="update_profiler">}\href{../../sagemaker.common/html/EstimatorBase.html#method-update_profiler}{\code{sagemaker.common::EstimatorBase$update_profiler()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="fit">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-fit}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$fit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="hyperparameters">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-hyperparameters}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$hyperparameters()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="prepare_workflow_for_training">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-prepare_workflow_for_training}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$prepare_workflow_for_training()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="record_set">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-record_set}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$record_set()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="training_image_uri">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-training_image_uri}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$training_image_uri()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="AmazonAlgorithmEstimatorBase" data-id="wait">}\href{../../sagemaker.mlcore/html/AmazonAlgorithmEstimatorBase.html#method-wait}{\code{sagemaker.mlcore::AmazonAlgorithmEstimatorBase$wait()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
This estimator is for IP Insights, an unsupervised algorithm that
             learns usage patterns of IP addresses.
             This Estimator may be fit via calls to
             :meth:`~sagemaker.amazon.amazon_estimator.AmazonAlgorithmEstimatorBase.fit`.
             It requires CSV data to be stored in S3.
             After this Estimator is fit, model data is stored in S3. The model
             may be deployed to an Amazon SageMaker Endpoint by invoking
             :meth:`~sagemaker.amazon.estimator.EstimatorBase.deploy`. As well as
             deploying an Endpoint, deploy returns a
             :class:`~sagemaker.amazon.IPInsightPredictor` object that can be used
             for inference calls using the trained model hosted in the SageMaker
             Endpoint.
             IPInsights Estimators can be configured by setting hyperparamters.
             The available hyperparamters are documented below.
             For further information on the AWS IPInsights algorithm, please
             consult AWS technical documentation:
             https://docs.aws.amazon.com/sagemaker/latest/dg/ip-insights-hyperparameters.html
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IPInsights$new(
  role,
  instance_count,
  instance_type,
  num_entity_vectors,
  vector_dim,
  batch_metrics_publish_interval = NULL,
  epochs = NULL,
  learning_rate = NULL,
  num_ip_encoder_layers = NULL,
  random_negative_sampling_rate = NULL,
  shuffled_negative_sampling_rate = NULL,
  weight_decay = NULL,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{role}}{(str): An AWS IAM role (either name or full ARN). The Amazon
SageMaker training jobs and APIs that create Amazon SageMaker
endpoints use this role to access training data and model
artifacts. After the endpoint is created, the inference code
might use the IAM role, if accessing AWS resource.}

\item{\code{instance_count}}{(int): Number of Amazon EC2 instances to use
for training.}

\item{\code{instance_type}}{(str): Type of EC2 instance to use for training,
for example, 'ml.m5.xlarge'.}

\item{\code{num_entity_vectors}}{(int): Required. The number of embeddings to
train for entities accessing online resources. We recommend 2x
the total number of unique entity IDs.}

\item{\code{vector_dim}}{(int): Required. The size of the embedding vectors for
both entity and IP addresses.}

\item{\code{batch_metrics_publish_interval}}{(int): Optional. The period at which
to publish metrics (batches).}

\item{\code{epochs}}{(int): Optional. Maximum number of passes over the training
data.}

\item{\code{learning_rate}}{(float): Optional. Learning rate for the optimizer.}

\item{\code{num_ip_encoder_layers}}{(int): Optional. The number of fully-connected
layers to encode IP address embedding.}

\item{\code{random_negative_sampling_rate}}{(int): Optional. The ratio of random
negative samples to draw during training. Random negative
samples are randomly drawn IPv4 addresses.}

\item{\code{shuffled_negative_sampling_rate}}{(int): Optional. The ratio of
shuffled negative samples to draw during training. Shuffled
negative samples are IP addresses picked from within a batch.}

\item{\code{weight_decay}}{(float): Optional. Weight decay coefficient. Adds L2
regularization.}

\item{\code{...}}{: base class keyword argument values.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_model"></a>}}
\if{latex}{\out{\hypertarget{method-create_model}{}}}
\subsection{Method \code{create_model()}}{
Create a model for the latest s3 model produced by this estimator.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IPInsights$create_model(vpc_config_override = "VPC_CONFIG_DEFAULT", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{vpc_config_override}}{(dict[str, list[str]]): Optional override for VpcConfig set on
the model.
Default: use subnets and security groups from this Estimator.
* 'Subnets' (list[str]): List of subnet ids.
* 'SecurityGroupIds' (list[str]): List of security group ids.}

\item{\code{...}}{: Additional kwargs passed to the IPInsightsModel constructor.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
:class:`~sagemaker.amazon.IPInsightsModel`: references the latest s3 model
             data produced by this estimator.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.prepare_for_training"></a>}}
\if{latex}{\out{\hypertarget{method-.prepare_for_training}{}}}
\subsection{Method \code{.prepare_for_training()}}{
Set hyperparameters needed for training. This method will also
             validate ``source_dir``.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IPInsights$.prepare_for_training(
  records,
  mini_batch_size = NULL,
  job_name = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{records}}{(RecordSet) – The records to train this Estimator on.}

\item{\code{mini_batch_size}}{(int or None) – The size of each mini-batch to use
when training. If None, a default value will be used.}

\item{\code{job_name}}{(str): Name of the training job to be created. If not
specified, one is generated, using the base name given to the
constructor if applicable.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{IPInsights$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
