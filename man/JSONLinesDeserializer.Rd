% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deserializers.R
\name{JSONLinesDeserializer}
\alias{JSONLinesDeserializer}
\title{JSONDeserializer Class}
\description{
Deserialize JSON lines data from an inference endpoint.
}
\seealso{
Other serializer: 
\code{\link{BaseDeserializer}},
\code{\link{BaseSerializer}},
\code{\link{BytesDeserializer}},
\code{\link{CSVDeserializer}},
\code{\link{CSVSerializer}},
\code{\link{DataTableDeserializer}},
\code{\link{IdentitySerializer}},
\code{\link{JSONDeserializer}},
\code{\link{JSONLinesSerializer}},
\code{\link{JSONSerializer}},
\code{\link{LibSVMSerializer}},
\code{\link{NumpyDeserializer}},
\code{\link{NumpySerializer}},
\code{\link{SimpleBaseDeserializer}},
\code{\link{SimpleBaseSerializer}},
\code{\link{SparseMatrixSerializer}},
\code{\link{StringDeserializer}},
\code{\link{TibbleDeserializer}}
}
\concept{serializer}
\section{Super classes}{
\code{\link[sagemaker.mlcore:BaseDeserializer]{sagemaker.mlcore::BaseDeserializer}} -> \code{\link[sagemaker.mlcore:SimpleBaseDeserializer]{sagemaker.mlcore::SimpleBaseDeserializer}} -> \code{JSONDeserializer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{JSONLinesDeserializer$new()}}
\item \href{#method-deserialize}{\code{JSONLinesDeserializer$deserialize()}}
\item \href{#method-clone}{\code{JSONLinesDeserializer$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="BaseDeserializer" data-id="format">}\href{../../sagemaker.mlcore/html/BaseDeserializer.html#method-format}{\code{sagemaker.mlcore::BaseDeserializer$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize a ``JSONLinesDeserializer`` instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JSONLinesDeserializer$new(accept = "application/json")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accept}}{(union[str, tuple[str]]): The MIME type (or tuple of allowable MIME types) that
is expected from the inference endpoint (default: ("text/csv","application/json")).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserialize"></a>}}
\if{latex}{\out{\hypertarget{method-deserialize}{}}}
\subsection{Method \code{deserialize()}}{
Deserialize JSON lines data from an inference endpoint.
              See https://docs.python.org/3/library/json.html#py-to-json-table to
              understand how JSON values are converted to R objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JSONLinesDeserializer$deserialize(stream, content_type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{stream}}{(botocore.response.StreamingBody): Data to be deserialized.}

\item{\code{content_type}}{(str): The MIME type of the data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list: A list of JSON serializable objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JSONLinesDeserializer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
