% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amazon_common.R
\name{RecordDeserializer}
\alias{RecordDeserializer}
\title{RecordDeserializer Class}
\description{
Deserialize RecordIO Protobuf data from an inference endpoint.
}
\section{Super classes}{
\code{\link[sagemaker.mlcore:BaseDeserializer]{sagemaker.mlcore::BaseDeserializer}} -> \code{\link[sagemaker.mlcore:SimpleBaseDeserializer]{sagemaker.mlcore::SimpleBaseDeserializer}} -> \code{RecordDeserializer}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RecordDeserializer$new()}}
\item \href{#method-deserializer}{\code{RecordDeserializer$deserializer()}}
\item \href{#method-clone}{\code{RecordDeserializer$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="BaseDeserializer" data-id="deserialize">}\href{../../sagemaker.mlcore/html/BaseDeserializer.html#method-deserialize}{\code{sagemaker.mlcore::BaseDeserializer$deserialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="sagemaker.mlcore" data-topic="BaseDeserializer" data-id="format">}\href{../../sagemaker.mlcore/html/BaseDeserializer.html#method-format}{\code{sagemaker.mlcore::BaseDeserializer$format()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Intialize RecordDeserializer class
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordDeserializer$new(accept = "application/x-recordio-protobuf")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{accept}}{(union[str, tuple[str]]): The MIME type (or tuple of allowable MIME types) that
is expected from the inference endpoint (default:
"application/x-recordio-protobuf").}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-deserializer"></a>}}
\if{latex}{\out{\hypertarget{method-deserializer}{}}}
\subsection{Method \code{deserializer()}}{
Deserialize RecordIO Protobuf data from an inference endpoint.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordDeserializer$deserializer(data, content_type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(object): The protobuf message to deserialize.}

\item{\code{content_type}}{(str): The MIME type of the data.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
list: A list of records.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RecordDeserializer$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
